# =============================================================================
# AGI Signpost Tracker - Environment Configuration
# =============================================================================

# -----------------------------------------------------------------------------
# API/ETL Service (services/etl)
# -----------------------------------------------------------------------------

# Database (required)
DATABASE_URL=postgresql+psycopg://postgres:postgres@localhost:5432/agi_signposts

# Redis (optional - if empty, uses in-memory cache fallback)
REDIS_URL=redis://localhost:6379/0

# HTTP Caching (seconds)
INDEX_CACHE_TTL_SECONDS=120           # /v1/index cache duration
SIGNPOSTS_CACHE_TTL_SECONDS=300       # /v1/signposts cache duration
EVIDENCE_CACHE_TTL_SECONDS=180        # /v1/evidence cache duration
FEED_CACHE_TTL_SECONDS=300            # /v1/feed.json cache duration

# Rate Limiting
RATE_LIMIT_PER_MINUTE=100             # Requests per minute per IP

# CORS (comma-separated origins)
CORS_ORIGINS=http://localhost:3000    # Add production URLs: https://your-app.vercel.app

# Admin API Key (for /v1/admin/retract and /v1/admin/recompute)
ADMIN_API_KEY=change-me-in-production                # CHANGE THIS IN PRODUCTION

# -----------------------------------------------------------------------------
# Scrapers (Playwright & HTTP)
# -----------------------------------------------------------------------------

# Scraping Mode
SCRAPE_REAL=false                     # true = live leaderboards, false = fixtures (safer for CI/dev)

# HTTP Client Settings
HTTP_TIMEOUT_SECONDS=20               # Request timeout
HTTP_MAX_RETRIES=3                    # Retry attempts on failure
HTTP_BACKOFF_BASE_SECONDS=1           # Exponential backoff base

# -----------------------------------------------------------------------------
# Observability
# -----------------------------------------------------------------------------

# Sentry (optional - leave empty to disable)
SENTRY_DSN_API=                       # API/ETL service DSN
SENTRY_DSN_WEB=                       # Next.js web app DSN

# Logging
LOG_LEVEL=INFO                        # DEBUG | INFO | WARNING | ERROR

# -----------------------------------------------------------------------------
# Web App (apps/web)
# -----------------------------------------------------------------------------

# API Base URL (auto-detected if empty)
NEXT_PUBLIC_API_URL=http://localhost:8000

# -----------------------------------------------------------------------------
# Optional Services
# -----------------------------------------------------------------------------

# OpenAI (for LLM-based claim extraction - optional)
OPENAI_API_KEY=

# Healthchecks.io (for task monitoring - optional)
HEALTHCHECKS_PING_URL=
